@model AplicacaoMedicina.Models.Medico


<div class="modal-header">
    <h4>Adicionar Médico</h4>
</div>

<div class="modal-body">

    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "cadastrar"}))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group label-floating">
                        <label class="control-label">Nome</label>
                        @Html.EditorFor(model => model.Nome_Medi, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nome_Medi, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group label-floating">
                        <label class="control-label">CRO</label>
                        @Html.EditorFor(model => model.CRM_Medi, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CRM_Medi, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group label-floating">
                        <label class="control-label">E-Mail</label>
                        @Html.EditorFor(model => model.Email_Medi, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email_Medi, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group label-floating">
                        <label class="control-label">Telefone</label>
                        @Html.EditorFor(model => model.Telefone_Medi, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Telefone_Medi, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
                       

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group label-floating">
                        <label class="control-label">Área</label>
                        @Html.DropDownList("ID_Area", null, new { @class = "form-control" })                   
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group label-floating">
                        <label class="control-label">Convênio</label>
                        <input type="text" class="bootstrap-tagsinput form-control" data-role="none" id="ID_Conv" name="ID_Conv" />

                        <span class="material-input"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group label-floating">
                        <label class="control-label">Valor</label>
                        @Html.EditorFor(model => model.Valor_Medi, new { htmlAttributes = new { @class = "form-control", @type="number" } })
                        @Html.ValidationMessageFor(model => model.Valor_Medi, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" id="submit" class="btn btn-primary pull-right"> Cadastrar </button>
                </div>
            </div>
            
        </div>
    }
</div>

<style>
    input[type=number]::-webkit-outer-spin-button,
    input[type=number]::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type=number] {
        -moz-appearance:textfield;
    }
</style>

@Scripts.Render("~/bundles/doctorScripts")

<script>
    $("#submit").on("click", function (event) {
        event.preventDefault();

        var form = document.getElementById("cadastrar");
        var data = $(form).serialize();

        //Pega a Action do Form.
        var modulo = $("#cadastrar").attr("action");

        $.ajax({
            url: modulo,
            type: 'POST',
            data: data,
            success: function (response) {
                if (response && response.success) {
                    location.reload();
                } else {                    

                    console.log(response);
                    console.log(response.error.length);

                    for (var i = 0; i <= response.error.length; ++i) {
                        console.log(response.error[i]);
                        $('#' + response.error[i]).css("background-image", "-webkit-linear-gradient(#f44336 0%,#f44336 100%), linear-gradient(#f44336 0%,#f44336 100%)");
                    }
                                                            
                }

            }, error: function (x, y, err) {
                alert("Operação não efetuada!");
            }
        });

    });
</script>



<script>
    $(document).ready(function () {

        var convMed = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('text'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            prefetch: '../Medico/GetConvenios'
        });

        convMed.initialize();

        $("#ID_Conv").tagsinput({
            itemValue: 'value',
            itemText: 'text',
            typeaheadjs:{
                name: 'convMed',
                displayKey: 'text',
                source: convMed.ttAdapter()
            }
        });


         $("#cadastrar").validate({
            rules:
            {
                Email_Medi:
                {
                    required: true,
                    minlength: 10,
                    email: true
                            },
                CRM_Medi:
                {
                    required: true
                },
                Telefone_Medi:
                {
                    minlength: 10,
                    maxlength: 15
                },
                Nome_Medi:
                {
                    required: true,
                    minlength: 4
                },
                TipoInscri_Medi:
                {
                    required: true

                }
            },
            messages:
            {
                Nome_Medi:
                {
                    required: "Campo Nome necessário"
                            },
                Email_Medi:
                {
                    required: "Campo E-Mail necessário",
                    minlength: jQuery.validator.format("Por favor, insira ao menos 10 caracteres"),
                    email: "Por favor, entre com um E-mail válido"
                },
                Telefone_Medi:
                {
                    minlength: jQuery.validator.format("Por favor, insira ao menos 10 caracteres")
                },
                CRM_Medi:
                {
                    required: "Campo CRO necessário"
                },
                TipoInscri_Medi:
                {
                    required: "Campo Tipo Inscrição necessário"
                }
            }
         });
    });

</script>
<style>
    .error {
        color: #c13434 !important;
    }
</style>
